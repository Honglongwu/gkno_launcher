{
  "description" : "Align fastq files using Mosaik (additional processing steps included).",

  "tasks" : {
    "generate-mosaik-parameters" : {
      "tool" : "premo"
    },
    "build-read-archive" : {
      "tool" : "mosaik-build-fastq"
    },
    "align" : {
      "tool" : "mosaik-aligner"
    },
    "sort-primary-bam" : {
      "tool" : "bamtools-sort"
    },
    "index-primary-bam" : {
      "tool " : "bamtools-index"
    },
    "get-alignment-stats" : {
      "tool" : "bamtools-stats"
    }
  },

  "nodes" : [
    {
      "ID" : "fastq",
      "description" : "The input fastq file (first mate).",
      "long form argument" : "--fastq",
      "short form argument" : "-q",
      "tasks" : {
        "generate-mosaik-parameters" : "-fq1",
        "build-read-archive" : "-fq1"
      }
    },
    {
      "ID" : "fastq2",
      "description" : "The input fastq file (second mate).",
      "long form argument" : "--fastq2",
      "short form argument" : "-q2",
      "tasks" : {
        "generate-mosaik-parameters" : "-fq2",
        "build-read-archive" : "-fq2"
      }
    },
    {
      "ID" : "reference",
      "description" : "The Mosaik format reference genome (.dat).",
      "long form argument" : "--mosaik-reference",
      "short form argument" : "-m",
      "tasks" : {
        "generate-mosaik-parameters" : "-ref",
        "align" : "-ia"
      }
    },
    {
      "ID" : "jump database",
      "description" : "The input Mosaik jump database stub.",
      "long form argument" : "--jump-database",
      "short form argument" : "-j",
      "tasks" : {
        "generate-mosaik-parameters" : "-jmp",
        "align" : "-jmp"
      }
    },
    {
      "ID" : "batch size",
      "description" : "The input Mosaik jump database stub.",
      "long form argument" : "--reads-per-batch",
      "short form argument" : "-rb",
      "tasks" : {
        "generate-mosaik-parameters" : "-b"
      }
    },
    {
      "ID" : "hash size",
      "description" : "The hash-size used in Mosaik [4 - 32].",
      "long form argument" : "--hash-size",
      "short form argument" : "-hs",
      "tasks" : {
        "generate-mosaik-parameters" : "-hs",
        "align" : "-hs"
      }
    },
    {
      "ID" : "sequencing technology",
      "description" : "Sequencing technology: '454', 'helicos', 'illumina', 'illumina_long', 'sanger' or 'solid'.",
      "long form argument" : "--sequencing-technology",
      "short form argument" : "-st",
      "tasks" : {
        "generate-mosaik-parameters" : "-st",
        "build-read-archive" : "-st"
      }
    },
    {
      "ID" : "single end neural net",
      "description" : "Neural network file for Mosaik mapping quality scores (single end).",
      "long form argument" : "--ann-se",
      "short form argument" : "-as",
      "tasks" : {
        "generate-mosaik-parameters" : "-annse",
        "align" : "-annse"
      }
    },
    {
      "ID" : "paired end neural net",
      "description" : "Neural network file for Mosaik mapping quality scores (paired end).",
      "long form argument" : "--ann-pe",
      "short form argument" : "-ap",
      "tasks" : {
        "generate-mosaik-parameters" : "-annpe",
        "align" : "-annpe"
      }
    },
    {
      "ID" : "fragment length",
      "description" : "Median fragment length.",
      "long form argument" : "--median-fragment-length",
      "short form argument" : "-mfl",
      "tasks" : {
        "build-read-archive" : "-mfl"
      }
    },
    {
      "ID" : "read archive",
      "description" : "The output read archive.",
      "long form argument" : "--read-archive",
      "short form argument" : "-a",
      "tasks" : {
        "build-read-archive" : "-out",
        "align" : "-in"
      }
    },
    {
      "ID" : "sample",
      "description" : "The sample name. e.g. NA12878.",
      "long form argument" : "--sample-name",
      "short form argument" : "-sam",
      "tasks" : {
        "build-read-archive" : "-out"
      }
    },
    {
      "ID" : "center",
      "description" : "The sequencing center name.",
      "long form argument" : "--center-name",
      "short form argument" : "-c",
      "tasks" : {
        "build-read-archive" : "-cn"
      }
    },
    {
      "ID" : "read group",
      "description" : "The read group ID. e.g. SRR009060.",
      "long form argument" : "--read-group-id",
      "short form argument" : "-id",
      "tasks" : {
        "build-read-archive" : "-rg"
      }
    },
    {
      "ID" : "library",
      "description" : "The library name. e.g. g1k-sc-NA18944-JPT-1.",
      "long form argument" : "--lane",
      "short form argument" : "-l",
      "tasks" : {
        "build-read-archive" : "-ln"
      }
    },
    {
      "ID" : "platform",
      "description" : "The platform unit. e.g. IL12_490_5.",
      "long form argument" : "--platform",
      "short form argument" : "-pu",
      "tasks" : {
        "build-read-archive" : "-pu"
      }
    },
    {
      "ID" : "special references",
      "description" : "Specifies the prefixes of 'special' reference sequences.",
      "long form argument" : "--special-reference-prefix",
      "short form argument" : "-s",
      "tasks" : {
        "align" : "-sref"
      }
    },
    {
      "ID" : "special reference hashes",
      "description" : "Specifies the maximum number of hashes for the special reference sequences.",
      "long form argument" : "--special-reference-hashes",
      "short form argument" : "-sh",
      "tasks" : {
        "align" : "-srefn"
      }
    },
    {
      "ID" : "threads",
      "description" : "Specifies the number of threads to use for the aligner.",
      "long form argument" : "--processors",
      "short form argument" : "-p",
      "tasks" : {
        "align" : "-p"
      }
    },
    {
      "ID" : "candidates",
      "description" : "Specifies the minimum length of an alignment candidate.",
      "long form argument" : "--alignment-candidate-threshold",
      "short form argument" : "-act",
      "tasks" : {
        "align" : "-act"
      }
    },
    {
      "ID" : "max hash",
      "description" : "Specifies the maximum number of positions stored for each hash.",
      "long form argument" : "--maximum-hashes-per-seed",
      "short form argument" : "-mhp",
      "tasks" : {
        "align" : "--maximum-hashes-per-seed"
      }
    },
    {
      "ID" : "aligned bam",
      "description" : "Linking tasks only.",
      "tasks" : {
        "align" : "--out",
        "sort-primary-bam" : "--in"
      },
      "extensions" : {
        "sort-primary-bam" : {
          "--in" : "bam"
        }
      }
    },
    {
      "ID" : "index",
      "description" : "Linking tasks only.",
      "tasks" : {
        "sort-primary-bam" : "--out",
        "index-primary-bam" : "--in",
        "get-alignment-stats" : "--in"
      }
    }
  ],

  "instances" : [
    {
      "ID" : "default",
      "description" : "Default instance requires user to input all input filenames.",
      "nodes" : []
    },

    {
      "ID" : "test",
      "description" : "Test instance for the test harness.",
      "nodes" : [
        {
          "ID" : "jump database",
          "argument" : "--mosaik-jump-database",
          "values" : ["$(RESOURCES)/tutorial/current/test_genome_10"]
        },
        {
          "ID" : "reference",
          "argument" : "--mosaik-reference",
          "values" : ["$(RESOURCES)/tutorial/current/test_genome.dat"]
        },
        {
          "ID" : "fastq",
          "argument" : "--fastq",
          "values" : ["$(RESOURCES)/tutorial/current/simulated_reads_1.fq"]
        },
        {
          "ID" : "fastq mate",
          "argument" : "--fastq2",
          "values" : ["$(RESOURCES)/tutorial/current/simulated_reads_2.fq"]
        },
        {
          "ID" : "se neural net",
          "argument" : "--ann-se",
          "values" : ["$(RESOURCES)/tutorial/current/se.100.005.ann"]
        },
        {
          "ID" : "pe neural net",
          "argument" : "--ann-pe",
          "values" : ["$(RESOURCES)/tutorial/current/pe.100.01.ann"]
        },
        {
          "ID" : "hash size",
          "argument" : "--hash-size",
          "values" : [10]
        }
      ]
    }
  ]
}
