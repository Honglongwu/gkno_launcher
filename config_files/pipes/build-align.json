{
  "description" : "Build Mosaik reference files and align fastq files using Mosaik (additional processing steps included).",
  "workflow" : [
    "build-reference",
    "build-jump-database",
    "generate-mosaik-parameters",
    "build-read-archive",
    "align",
    "sort-primary-bam",
    "sort-multiple-bam",
    "index-primary-bam",
    "count-covariates",
    "recalibrate-bq"
  ],
  "tools" : {
    "build-reference" : "mosaik-build-reference",
    "build-jump-database" : "mosaik-jump",
    "generate-mosaik-parameters" : "premo",
    "build-read-archive" : "mosaik-build-fastq",
    "align" : "mosaik-aligner",
    "sort-primary-bam" : "bamtools-sort",
    "sort-multiple-bam" : "bamtools-sort",
    "index-primary-bam" : "bamtools-index",
    "count-covariates" : "gatk-count-covariates",
    "recalibrate-bq" : "gatk-recalibrate-bq"
  },
  "internal loop" : [
    "generate-mosaik-parameters",
    "build-read-archive",
    "align",
    "sort-primary-bam",
    "sort-multiple-bam",
    "index-primary-bam",
    "count-covariates",
    "recalibrate-bq"
  ],
  "construct filenames" : {
    "build-reference" : {
      "-oa" : {
        "filename root" : "from argument",
        "get root from task" : "build-reference",
        "get root from argument" : "-fr",
        "remove input extension" : true
      }
    },
    "build-jump-database" : {
      "-out" : {
        "filename root" : "from argument",
        "get root from task" : "build-reference",
        "get root from argument" : "-fr",
        "remove input extension" : true,
        "additional text from parameters" : {
          "order" : [
            "filename root",
            "hash-size"
          ],
          "hash-size" : {
            "get parameter from task" : "build-jump-database",
            "get parameter from argument" : "-hs",
            "remove extension" : true
          }
        }
      }
    }
  },
  "linkage" : {
    "build-jump-database" : {
      "-ia" : {
        "link to this task" : "build-reference",
        "link to this argument" : "-oa"
      }
    },
    "generate-mosaik-parameters" : {
      "-hs" : {
        "link to this task" : "build-jump-database",
        "link to this argument" : "-hs"
      },
      "-ref" : {
        "link to this task" : "build-reference",
        "link to this argument" : "-oa"
      },
      "-jmp" : {
        "link to this task" : "build-jump-database",
        "link to this argument" : "-out"
      }
    },
    "build-read-archive" : {
      "-q" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-fq1"
      },
      "-q2" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-fq2"
      },
      "-st" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-st"
      },
      "json parameters" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-out",
        "json block" : "MosaikBuild"
      }
    },
    "align" : {
      "-in" : {
        "link to this task" : "build-read-archive",
        "link to this argument" : "-out"
      },
      "-ia" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-ref"
      },
      "-hs" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-hs"
      },
      "-j" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-jmp"
      },
      "-annse" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-annse"
      },
      "-annpe" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-annpe"
      },
      "json parameters" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-out",
        "json block" : "MosaikAligner"
      }
    },
    "sort-primary-bam" : {
      "-in" : {
        "link to this task" : "align",
        "link to this argument" : "-out",
        "extension" : ".bam"
      }
    },
    "sort-multiple-bam" : {
      "-in" : {
        "link to this task" : "align",
        "link to this argument" : "-out",
        "extension" : ".multiple.bam"
      },
      "-out" : {
        "link to this task" : "align",
        "link to this argument" : "-out",
        "extension" : ".multiple.sorted.bam"
      }
    },
    "index-primary-bam" : {
      "-in" : {
        "link to this task" : "sort-primary-bam",
        "link to this argument" : "-out"
      }
    },
    "count-covariates" : {
      "--reference_sequence" : {
        "link to this task" : "build-reference",
        "link to this argument" : "-fr"
      },
      "--input_file" : {
        "link to this task" : "sort-primary-bam",
        "link to this argument" : "-out"
      }
    },
    "recalibrate-bq" : {
      "--reference_sequence" : {
        "link to this task" : "build-reference",
        "link to this argument" : "-fr"
      },
      "--input_file" : {
        "link to this task" : "count-covariates",
        "link to this argument" : "--input_file"
      },
      "--BQSR" : {
        "link to this task" : "count-covariates",
        "link to this argument" : "--out"
      }
    }
  },
  "arguments" : {
    "--fasta" : {
      "description" : "The reference fasta genome.  This must be the fasta from which the Mosaik archive was generated.",
      "link to this task" : "build-reference",
      "link to this argument" : "-fr",
      "short form argument" : "-f",
      "type" : "string",
      "default" : "test_genome.fa"
    },
    "--hash-size" : {
      "description" : "The hash-size used in Mosaik [4 - 32].",
      "link to this task" : "build-jump-database",
      "link to this argument" : "-hs",
      "type" : "integer",
      "short form argument" : "-hs"
    },
    "--fastq" : {
      "description" : "The input fastq file (first mate).",
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-fq1",
      "short form argument" : "-q",
      "type" : "string",
      "required" : "true"
    },
    "--fastq2" : {
      "description" : "The input fastq file (second mate).",
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-fq2",
      "short form argument" : "-q2",
      "type" : "string",
      "required" : "true"
    },
    "--mosaik-reference" : {
      "description" : "The Mosaik format reference genome (.dat).",
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-ref",
      "short form argument" : "-r",
      "type" : "string",
      "default" : "test_genome.dat"
    },
    "--mosaik-jump-database" : {
      "description" : "The input Mosaik jump database stub.",
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-jmp",
      "short form argument" : "-j",
      "type" : "string",
      "default" : "test_genome"
    },
    "--batch-size" : {
      "description" : "Number of pairs to align per batch.",
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-n",
      "short form argument" : "-b",
      "type" : "integer"
    },
    "--sequencing-technology" : {
      "description" : "Sequencing technology: '454', 'helicos', 'illumina', 'illumina_long', 'sanger' or 'solid'.",
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-st",
      "short form argument" : "-st",
      "type" : "string"
    },
    "--ann-se" : {
      "description" : "Neural network file for Mosaik mapping quality scores (single end).",
      "short form argument" : "-as",
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-annse",
      "type" : "string"
    },
    "--ann-pe" : {
      "description" : "Neural network file for Mosaik mapping quality scores (paired end).",
      "short form argument" : "-ap",
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-annpe",
      "type" : "string"
    },
    "--median-fragment-length" : {
      "description" : "The median fragment length.",
      "link to this task" : "build-read-archive",
      "link to this argument" : "-mfl",
      "type" : "integer",
      "short form argument" : "-mfl"
    },
    "--out" : {
      "description" : "The output read archive.",
      "link to this task" : "build-read-archive",
      "link to this argument" : "-out",
      "short form argument" : "-o",
      "type" : "string"
    },
    "--known-sites" : {
      "description" : "A database of known polymorphic sites to skip over in the recalibration algorithm.",
      "link to this task" : "count-covariates",
      "link to this argument" : "-knownSites",
      "short form argument" : "-k",
      "type" : "flag"
    }
  },
  "delete files" : {
    "build-read-archive" : {
      "-out" : {
        "delete after task" : "align"
      }
    },
    "align" : {
      "-out" : {
        "output extension" : [
          ".bam",
          ".multiple.bam"
        ],
        "delete after task" : [
          "sort-primary-bam",
          "sort-multiple-bam"
        ]
      }
    }
  },
  "instances" : {
    "default" : {
      "description" : "Default instance requires user to input all input filenames."
    },
    "test" : {
      "description" : "Test instance for the test harness.",
      "--fasta" : "$(RESOURCES)/tutorial/current/test_genome.fa",
      "--fastq" : "$(RESOURCES)/tutorial/current/simulated_reads_1.fq",
      "--fastq2" : "$(RESOURCES)/tutorial/current/simulated_reads_2.fq",
      "--ann-se" : "$(RESOURCES)/tutorial/current/se.100.005.ann",
      "--ann-pe" : "$(RESOURCES)/tutorial/current/pe.100.01.ann",
      "--hash-size" : "10",
      "--sequencing-technology" : "illumina",
      "--known-sites" : "$(RESOURCES)/tutorial/current/test_genome.dbSNP.snps.sites.vcf"
    }
  }
}
