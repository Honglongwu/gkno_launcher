{
  "description" : "Build Mosaik reference files and align fastq files using Mosaik (additional processing steps included).",
  "workflow" : [
    "build-tangram-reference",
    "merge-fasta",
    "index-fasta",
    "create-sequence-dictionary",
    "build-reference",
    "build-jump-database",
    "generate-mosaik-parameters",
    "build-read-archive",
    "align",
    "sort-primary-bam",
    "sort-multiple-bam",
    "index-primary-bam",
    "mark-duplicates",
    "index-final-bam",
    "generate-bam-list",
    "scan-bam-files",
    "detect-mei"
  ],
  "tools" : {
    "build-tangram-reference" : "tangram-index",
    "merge-fasta" : "concatenate-files",
    "index-fasta" : "samtools-index-fasta",
    "create-sequence-dictionary" : "picard-create-sequence-dictionary",
    "build-reference" : "mosaik-build-reference",
    "build-jump-database" : "mosaik-jump",
    "generate-mosaik-parameters" : "premo",
    "build-read-archive" : "mosaik-build-fastq",
    "align" : "mosaik-aligner",
    "sort-primary-bam" : "bamtools-sort",
    "sort-multiple-bam" : "bamtools-sort",
    "index-primary-bam" : "bamtools-index",
    "generate-bam-list" : "generate-file-list",
    "mark-duplicates" : "picard-mark-duplicates",
    "index-final-bam" : "bamtools-index",
    "scan-bam-files" : "tangram-scan",
    "detect-mei" : "tangram-detect"
  },
  "internal loop" : [
    "generate-mosaik-parameters",
    "build-read-archive",
    "align",
    "sort-primary-bam",
    "sort-multiple-bam",
    "index-primary-bam",
    "mark-duplicates",
    "index-final-bam"
  ],
  "construct filenames" : {
    "build-reference" : {
      "-oa" : {
        "filename root" : "from argument",
        "get root from task" : "build-reference",
        "get root from argument" : "-fr",
        "remove input extension" : true
      }
    },
    "build-jump-database" : {
      "-out" : {
        "filename root" : "from argument",
        "get root from task" : "build-reference",
        "get root from argument" : "-fr",
        "remove input extension" : true,
        "additional text from parameters" : {
          "order" : [
            "filename root",
            "hash-size"
          ],
          "hash-size" : {
            "get parameter from task" : "build-jump-database",
            "get parameter from argument" : "-hs",
            "remove extension" : true
          }
        }
      }
    },
    "generate-bam-list" : {
      "--out" : {
        "filename root" : "from text",
        "filename root text" : "tangram-bam-list.txt"
      }
    },
    "detect-mei" : {
      "-lb" : {
        "filename root" : "from argument",
        "get root from task" : "scan-bam-files",
        "get root from argument" : "-dir",
        "remove input extension" : true,
        "additional text" : "/lib_table.dat"
      },
      "-ht" : {
        "filename root" : "from argument",
        "get root from task" : "scan-bam-files",
        "get root from argument" : "-dir",
        "remove input extension" : false,
        "additional text" : "/hist.dat"
      },
      "-out" : {
        "filename root" : "from text",
        "filename root text" : "tangram"
      }
    }
  },
  "linkage" : {
    "merge-fasta" : {
      "--in" : {
        "link to this task" : [
          "build-tangram-reference",
          "build-tangram-reference"
        ],
        "link to this argument" : [
          "-ref",
          "-sp"
        ]
      }
    },
    "index-fasta" : {
      "--in" : {
        "link to this task" : "merge-fasta",
        "link to this argument" : "--out"
      }
    },
    "create-sequence-dictionary" : {
      "REFERENCE" : {
        "link to this task" : "merge-fasta",
        "link to this argument" : "--out"
      }
    },
    "build-reference" : {
      "-fr" : {
        "link to this task" : "merge-fasta",
        "link to this argument" : "--out"
      }
    },
    "build-jump-database" : {
      "-ia" : {
        "link to this task" : "build-reference",
        "link to this argument" : "-oa"
      }
    },
    "generate-mosaik-parameters" : {
      "-hs" : {
        "link to this task" : "build-jump-database",
        "link to this argument" : "-hs"
      },
      "-ref" : {
        "link to this task" : "build-reference",
        "link to this argument" : "-oa"
      },
      "-jmp" : {
        "link to this task" : "build-jump-database",
        "link to this argument" : "-out"
      }
    },
    "build-read-archive" : {
      "-q" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-fq1"
      },
      "-q2" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-fq2"
      },
      "-st" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-st"
      },
      "json parameters" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-out",
        "json block" : "MosaikBuild"
      }
    },
    "align" : {
      "-in" : {
        "link to this task" : "build-read-archive",
        "link to this argument" : "-out"
      },
      "-ia" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-ref"
      },
      "-hs" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-hs"
      },
      "-j" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-jmp"
      },
      "-annse" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-annse"
      },
      "-annpe" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-annpe"
      },
      "json parameters" : {
        "link to this task" : "generate-mosaik-parameters",
        "link to this argument" : "-out",
        "json block" : "MosaikAligner"
      }
    },
    "sort-primary-bam" : {
      "-in" : {
        "link to this task" : "align",
        "link to this argument" : "-out",
        "extension" : ".bam"
      }
    },
    "sort-multiple-bam" : {
      "-in" : {
        "link to this task" : "align",
        "link to this argument" : "-out",
        "extension" : ".multiple.bam"
      },
      "-out" : {
        "link to this task" : "align",
        "link to this argument" : "-out",
        "extension" : ".multiple.sorted.bam"
      }
    },
    "index-primary-bam" : {
      "-in" : {
        "link to this task" : "sort-primary-bam",
        "link to this argument" : "-out"
      }
    },
    "mark-duplicates" : {
      "INPUT" : {
        "link to this task" : "sort-primary-bam",
        "link to this argument" : "-out"
      }
    },
    "index-final-bam" : {
      "-in" : {
        "link to this task" : "mark-duplicates",
        "link to this argument" : "OUTPUT"
      }
    },
    "generate-bam-list" : {
      "--in" : {
        "link to this task" : "mark-duplicates",
        "link to this argument" : "OUTPUT"
      }
    },
    "scan-bam-files" : {
      "-in" : {
        "link to this task" : "generate-bam-list",
        "link to this argument" : "--out"
      }
    },
    "detect-mei" : {
      "-in" : {
        "link to this task" : "generate-bam-list",
        "link to this argument" : "--out"
      },
      "-ref" : {
        "link to this task" : "build-tangram-reference",
        "link to this argument" : "-out"
      }
    }
  },
  "arguments" : {
    "--reference" : {
      "description" : "The input reference fasta.",
      "link to this task" : "build-tangram-reference",
      "link to this argument" : "-ref",
      "short form argument" : "-r",
      "type" : "string"
    },
    "--moblist-reference" : {
      "description" : "The input mobile element reference fasta.",
      "link to this task" : "build-tangram-reference",
      "link to this argument" : "-sp",
      "short form argument" : "-mr",
      "type" : "string"
    },
    "--output-reference" : {
      "description" : "The output reference file for use with TANGRAM.",
      "link to this task" : "build-tangram-reference",
      "link to this argument" : "-out",
      "short form argument" : "-or",
      "type" : "string"
    },
    "--merged-reference" : {
      "description" : "The merged reference fasta for aligning the reads (MOSAIK).",
      "link to this task" : "merge-fasta",
      "link to this argument" : "--out",
      "type" : "string",
      "short form argument" : "-ar"
    },
    "--hash-size" : {
      "description" : "hash-size",
      "link to this task" : "build-jump-database",
      "link to this argument" : "-hs",
      "type" : "integer",
      "short form argument" : "-hs"
    },
    "--fastq" : {
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-fq1",
      "short form argument" : "-q",
      "type" : "string",
      "user entry required" : "true"
    },
    "--fastq2" : {
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-fq2",
      "short form argument" : "-q2",
      "type" : "string",
      "user entry required" : "true"
    },
    "--batch-size" : {
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-n",
      "short form argument" : "-b",
      "type" : "integer"
    },
    "--sequencing-technology" : {
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-st",
      "short form argument" : "-st",
      "type" : "string"
    },
    "--sequencing-technology" : {
      "description" : "Sequencing technology: '454', 'helicos', 'illumina', 'illumina_long', 'sanger' or 'solid'.",
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-st",
      "short form argument" : "-st",
      "type" : "string"
    },
    "--ann-se" : {
      "description" : "Neural network file for Mosaik mapping quality scores (single end).",
      "short form argument" : "-as",
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-annse",
      "type" : "string"
    },
    "--ann-pe" : {
      "description" : "Neural network file for Mosaik mapping quality scores (paired end).",
      "short form argument" : "-ap",
      "link to this task" : "generate-mosaik-parameters",
      "link to this argument" : "-annpe",
      "type" : "string"
    },
    "--median-fragment-length" : {
      "link to this task" : "build-read-archive",
      "link to this argument" : "-mfl",
      "type" : "integer",
      "short form argument" : "-mfl"
    },
    "--archive-name" : {
      "link to this task" : "build-read-archive",
      "link to this argument" : "-out",
      "short form argument" : "-an",
      "type" : "string"
    },
    "--special-references" : {
      "description" : "Specifies the prefixes of 'special' reference sequences.",
      "link to this task" : "align",
      "link to this argument" : "-sref",
      "short form argument" : "-sr",
      "type" : "string"
    },
    "--special-reference-hashes" : {
      "description" : "Specifies the maximum number of hashes for the special reference sequences.",
      "link to this task" : "align",
      "link to this argument" : "-srefn",
      "short form argument" : "-srh",
      "type" : "integer"
    },
    "--tangram-directory" : {
      "link to this task" : "scan-bam-files",
      "link to this argument" : "-dir",
      "short form argument" : "-td",
      "type" : "string"
    },
    "--minimum-fragments" : {
      "link to this task" : "scan-bam-files",
      "link to this argument" : "-mf",
      "short form argument" : "-mf",
      "type" : "integer"
    },
    "--detection-bam-list" : {
      "link to this task" : "detect-mei",
      "link to this argument" : "-in",
      "short form argument" : "-dl",
      "type" : "string"
    },
    "--library-file" : {
      "link to this task" : "detect-mei",
      "link to this argument" : "-lb",
      "short form argument" : "-lb",
      "type" : "string"
    },
    "--histogram-file" : {
      "link to this task" : "detect-mei",
      "link to this argument" : "-ht",
      "short form argument" : "-ht",
      "type" : "string"
    },
    "--tangram-reference" : {
      "link to this task" : "detect-mei",
      "link to this argument" : "-ref",
      "short form argument" : "-tr",
      "type" : "string"
    },
    "--tangram-region" : {
      "link to this task" : "detect-mei",
      "link to this argument" : "-rg",
      "short form argument" : "-rg",
      "type" : "string"
    },
    "--tangram-output" : {
      "link to this task" : "detect-mei",
      "link to this argument" : "-out",
      "short form argument" : "-to",
      "type" : "string"
    },
    "--tangram-threads" : {
      "link to this task" : "detect-mei",
      "link to this argument" : "-p",
      "short form argument" : "-tt",
      "type" : "integer"
    }
  },
  "delete files" : {
    "build-read-archive" : {
      "-out" : {
        "delete after task" : "align"
      }
    },
    "align" : {
      "-out" : {
        "output extension" : [
          ".bam",
          ".multiple.bam"
        ],
        "delete after task" : [
          "sort-primary-bam",
          "sort-multiple-bam"
        ]
      }
    }
  },
  "instances" : {
    "default" : {
      "description" : "Default instance requires user to input all input filenames."
    },
    "test" : {
      "description" : "Test instance for the test harness.",
      "--reference" : "$(RESOURCES)/tutorial/current/test_genome.fa",
      "--moblist-reference" : "$(RESOURCES)/tutorial/current/mobile_element_sequences.fa",
      "--fastq" : "$(RESOURCES)/tutorial/current/simulated_reads_1.fq",
      "--fastq2" : "$(RESOURCES)/tutorial/current/simulated_reads_2.fq",
      "--ann-se" : "$(RESOURCES)/tutorial/current/se.100.005.ann",
      "--ann-pe" : "$(RESOURCES)/tutorial/current/pe.100.01.ann",
      "--hash-size" : "10",
      "--sequencing-technology" : "illumina"
    },
    "tutorial" : {
      "description" : "Tutorial instance for running TANGRAM.",
      "--reference" : "$(RESOURCES)/tutorial/current/test_genome.fa",
      "--moblist-reference" : "$(RESOURCES)/tutorial/current/mobile_element_sequences.fa",
      "--output-reference" : "tangram-reference",
      "--merged-reference" : "reference_moblist.fa",
      "--ann-se" : "$(RESOURCES)/tutorial/current/se.100.005.ann",
      "--ann-pe" : "$(RESOURCES)/tutorial/current/pe.100.01.ann",
      "--hash-size" : "10",
      "--sequencing-technology" : "illumina",
      "--special-references" : "moblist",
      "--special-reference-hashes" : "50",
      "--internal-loop" : "$(RESOURCES)/tutorial/current/tangram-align.json",
      "--number-jobs" : "2",
      "--tangram-directory" : "tangram-files",
      "--minimum-fragments" : "0",
      "--tangram-region" : "20:1-999999",
      "--tangram-output" : "tangram-calls"
    }
  }
}
